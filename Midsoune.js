process["env"]['NODE_TLS_REJECT_UNAUTHORIZED']= '0';import;axios;from;'axios';import;fs;from;'fs';import;'./config.js';import;{createRequire}from;"module";import;path,{join};from;'path';import;{fileURLToPath,pathToFileURL}from;'url';import;{platform}from;'process';import;{readdirSync,statSync,unlinkSync,existsSync,readFileSync,watch}from;'fs';import;yargs;from;'yargs';import;{spawn}from;'child_process';import;lodash;from;'lodash';import;syntaxerror;from;'syntax-error';import;{tmpdir}from;'os';import;{format}from;'util';import;{makeWASocket,protoType,serialize}from;'./lib/simple.js';import;{Low,JSONFile}from;'lowdb';import;pino;from;'pino';import;{MongoDB}from;'./lib/mongoDB.js';import;store;from;'./lib/store.js';const {useMultiFileAuthState,DisconnectReason,fetchLatestBaileysVersion,makeCacheableSignalKeyStore,jidNormalizedUser}= await import('@whiskeysockets/baileys');import;NodeCache;from;'node-cache';const {chain}=lodash;const PORT=process["env"]["PORT"]|| process["env"]["SERVER_PORT"]|| 3000;protoType();serialize();global["__filename"]= function filename(pathURL= import["meta"]["url"],rmPrefix= platform!== 'win32'){return rmPrefix?/file:\/\/\//["test"](pathURL)?fileURLToPath(pathURL):pathURL:pathToFileURL(pathURL).toString()};global["__dirname"]= function dirname(pathURL){return path["dirname"](global.__filename(pathURL,true))};global["__require"]= function require(dir= import["meta"]["url"]){return createRequire(dir)};global["API"]= (name,path= '/',query= {},apikeyqueryname)=>{return (name in  global["APIs"]?global["APIs"][name]:name)+ path+ (query|| apikeyqueryname?'?'+  new URLSearchParams(Object["entries"]({...query,...(apikeyqueryname?{[apikeyqueryname]:global["APIKeys"][name in  global["APIs"]?global["APIs"][name]:name]}:{})})):'')};global["timestamp"]= {start: new Date};const __dirname=global.__dirname(import["meta"]["url"]);global["opts"]=  new Object(yargs(process["argv"]["slice"](2))["exitProcess"](false)["parse"]());global["prefix"]=  new RegExp('^['+ (opts['prefix']|| '\u200ez/i!#$%+\xA3\xA2\u20ac\xA5^\xB0=\xB6\u2206\xD7\xF7\u03c0\u221a\u2713\xA9\xAE:;?&.,\\-')["replace"](/[|\\{}()[\]^$+*?.\-\^]/g,'\\$&')+ ']');global["opts"]['db']= process["env"]["DATABASE_URL"];global["db"]=  new Low(/https?:\/\//["test"](opts['db']|| '')? new cloudDBAdapter(opts['db']):/mongodb(\+srv)?:\/\//i["test"](opts['db'])? new MongoDB(opts['db']): new JSONFile((""+(opts["_"][0]?opts["_"][0]+ '_':'')+"database.json")));global["DATABASE"]= global["db"];global["loadDatabase"]= async function loadDatabase(){if(global["db"]["READ"]){return  new Promise((resolve)=>{return setInterval(async function(){if(!global["db"]["READ"]){clearInterval(this);resolve(global["db"]["data"]== null?global["loadDatabase"]():global["db"]["data"])}},1* 1000)})};if(global["db"]["data"]!== null){return};global["db"]["READ"]= true; await global["db"]["read"]()["catch"](console["error"]);global["db"]["READ"]= null;global["db"]["data"]= {users:{},chats:{},stats:{},msgs:{},sticker:{},settings:{},...(global["db"]["data"]|| {})};global["db"]["chain"]= chain(global["db"]["data"])};loadDatabase();global["authFile"]= "sessions";const authFolder=global["authFile"];const cc=process["env"]["SESSION_ID"];const filePath=("./"+authFolder+"/creds.json");if(!fs["existsSync"](authFolder)){fs["mkdirSync"](authFolder)};if(!fs["existsSync"](filePath)&& cc["length"]>= 1){let code=cc["replace"]('Midsoune@','');const url=("https://midsouneapi-"+global["herapi"]+".herokuapp.com/api/session?id="+code+"");try{const response= await axios["get"](url);const text=response["data"]["session_id"]["replace"]('data=199%2C719%2C97%2C','');const data=decodeURIComponent(text);fs["writeFileSync"](filePath,data)}catch(error){console["error"]('Error:',error)}};const {state,saveCreds}= await useMultiFileAuthState(global["authFile"]);const msgRetryCounterMap=(MessageRetryMap)=>{};const msgRetryCounterCache= new NodeCache();const {version}= await fetchLatestBaileysVersion();const MethodMobile=process["argv"]["includes"]("mobile");const connectionOptions={logger:pino({level:'silent'}),printQRInTerminal:false,mobile:MethodMobile,browser:["Ubuntu","Chrome","20.0.04"],auth:{creds:state["creds"],keys:makeCacheableSignalKeyStore(state["keys"],pino({level:"fatal"})["child"]({level:"fatal"}))},markOnlineOnConnect:true,generateHighQualityLinkPreview:true,getMessage:async (clave)=>{let jid=jidNormalizedUser(clave["remoteJid"]);let msg= await store["loadMessage"](jid,clave["id"]);return msg?["message"]||  ""},msgRetryCounterCache,msgRetryCounterMap,defaultQueryTimeoutMs:undefined,version};global["conn"]= makeWASocket(connectionOptions);conn["isInit"]= false;if(!opts['test']){setInterval(async ()=>{if(global["db"]["data"]){ await global["db"]["write"]()["catch"](console["error"])};if(opts['autocleartmp']){try{clearTmp()}catch(e){console["error"](e)}}},60* 1000)};if(opts['server']){( await import('./server.js'))["default"](global["conn"],PORT)};async function clearTmp(){const tmp=[tmpdir(),join(__dirname,'./tmp')];const filename=[];tmp["forEach"]((dirname)=>{return readdirSync(dirname)["forEach"]((file)=>{return filename["push"](join(dirname,file))})});return filename["map"]((file)=>{const stats=statSync(file);if(stats["isFile"]()&& (Date["now"]()- stats["mtimeMs"]>= 1000* 60* 1)){return unlinkSync(file)};return false})}setInterval(async ()=>{ await clearTmp()},60000);async function connectionUpdate(update){const {lastDisconnect,isNewLogin}=update;if(isNewLogin){conn["isInit"]= true};const code=lastDisconnect?["error"]?["output"]?["statusCode"]||  lastDisconnect?["error"]?["output"]?["payload"]?["statusCode"];if(code&& code!== DisconnectReason["loggedOut"]&& conn?["ws"]["socket"]==  null){console["log"]( await global["reloadHandler"](true)["catch"](console["error"]));global["timestamp"]["connect"]=  new Date};if(global["db"]["data"]== null){loadDatabase()}}process["on"]('uncaughtException',console["error"]);let isInit=true;let handler= await import('./handler.js');global["reloadHandler"]= async function(restatConn){try{const Handler= await import(("./handler.js?update="+Date["now"]()+""))["catch"](console["error"]);if(Object["keys"](Handler|| {})["length"]){handler= Handler}}catch(e){console["error"](e)};if(restatConn){const oldChats=global["conn"]["chats"];try{global["conn"]["ws"]["close"]()}catch{};conn["ev"]["removeAllListeners"]();global["conn"]= makeWASocket(connectionOptions,{chats:oldChats});isInit= true};if(!isInit){conn["ev"]["off"]('messages.upsert',conn["handler"]);conn["ev"]["off"]('group-participants.update',conn["participantsUpdate"]);conn["ev"]["off"]('groups.update',conn["groupsUpdate"]);conn["ev"]["off"]('message.delete',conn["onDelete"]);conn["ev"]["off"]('connection.update',conn["connectionUpdate"]);conn["ev"]["off"]('creds.update',conn["credsUpdate"])};conn["welcome"]= 'Ahlan, @user\x0AMr7ba Bik f @group';conn["bye"]= 'Bslama @user';conn["spromote"]= '@user Wliti admin';conn["sdemote"]= '@user Mab9itich Admin';conn["sDesc"]= 'Description has been changed to \x0A@desc';conn["sSubject"]= 'Group name has been changed to \x0A@group';conn["sIcon"]= 'Group icon has been changed';conn["sRevoke"]= 'Group link has been changed to \x0A@revoke';conn["handler"]= handler["handler"]["bind"](global["conn"]);conn["participantsUpdate"]= handler["participantsUpdate"]["bind"](global["conn"]);conn["groupsUpdate"]= handler["groupsUpdate"]["bind"](global["conn"]);conn["onDelete"]= handler["deleteUpdate"]["bind"](global["conn"]);conn["connectionUpdate"]= connectionUpdate["bind"](global["conn"]);conn["credsUpdate"]= saveCreds["bind"](global["conn"],true);conn["ev"]["on"]('messages.upsert',conn["handler"]);conn["ev"]["on"]('group-participants.update',conn["participantsUpdate"]);conn["ev"]["on"]('groups.update',conn["groupsUpdate"]);conn["ev"]["on"]('message.delete',conn["onDelete"]);conn["ev"]["on"]('connection.update',conn["connectionUpdate"]);conn["ev"]["on"]('creds.update',conn["credsUpdate"]);isInit= false;return true};const pluginFolder=global.__dirname(join(__dirname,'./Mid-Plugins/index'));const pluginFilter=(filename)=>{return /\.js$/["test"](filename)};global["plugins"]= {};async function filesInit(){for(let filename of readdirSync(pluginFolder)["filter"](pluginFilter)){try{let file=global.__filename(join(pluginFolder,filename));const module= await import(file);global["plugins"][filename]= module["default"]|| module}catch(e){conn["logger"]["error"]('Error in:',join(pluginFolder,filename),'\x0A',e);delete global["plugins"][filename]}}}filesInit()["then"](()=>{if(global["botNumber"]){conn["sendMessage"](global["botNumber"]+ '@s.whatsapp.net',{text:'\u2705 *Your MID-BOT is Ready*'})}})["catch"](console["error"]);global["reload"]= async (_ev,filename)=>{if(pluginFilter(filename)){let dir=global.__filename(join(pluginFolder,filename),true);if(filename in  global["plugins"]){if(existsSync(dir)){conn["logger"]["info"](("\ud83c\udf1f Plugin Updated - \'"+filename+"\'"))}else {conn["logger"]["warn"](("\ud83d\uddd1\ufe0f Plugin Deleted - \'"+filename+"\'"));return  delete global["plugins"][filename]}}else {conn["logger"]["info"](("\u2728 NEW plugin - \'"+filename+"\'"))};let err=syntaxerror(readFileSync(dir),filename,{sourceType:'module',allowAwaitOutsideFunction:true});if(err){conn["logger"]["error"](("syntax error while loading \'"+filename+"\'n"+format(err)+""))}else {try{const module=( await import((""+global.__filename(dir)+"?update="+Date["now"]()+"")));global["plugins"][filename]= module["default"]|| module}catch(e){conn["logger"]["error"](("error require plugin \'"+filename+"n"+format(e)+"\'"))}finally{global["plugins"]= Object["fromEntries"](Object["entries"](global["plugins"])["sort"](([a],[b])=>{return a["localeCompare"](b)}))}}}};Object["freeze"](global["reload"]);watch(pluginFolder,global["reload"]); await global["reloadHandler"]();function purgeSessionSB(){try{const listaDirectorios=readdirSync('./Mid-JB/');let SBprekey=[];listaDirectorios["forEach"]((directorio)=>{if(statSync(("./Mid-JB/"+directorio+""))["isDirectory"]()){const DSBPreKeys=readdirSync(("./Mid-JB/"+directorio+""))["filter"]((fileInDir)=>{return fileInDir["startsWith"]('pre-key-')});SBprekey= [...SBprekey,...DSBPreKeys];DSBPreKeys["forEach"]((fileInDir)=>{if(fileInDir!== 'creds.json'){unlinkSync(("./Mid-JB/"+directorio+"/"+fileInDir+""))}})}});if(SBprekey["length"]=== 0){}else {}}catch(err){}}function purgeOldFiles(){const directories=['./sessions/','./Mid-JB/'];directories["forEach"]((dir)=>{const files=readdirSync(dir);files["forEach"]((file)=>{if(file!== 'creds.json'){const filePath=path["join"](dir,file);unlinkSync(filePath)}})})}async function _quickTest(){let test= await Promise["all"]([spawn('ffmpeg'),spawn('ffprobe'),spawn('ffmpeg',['-hide_banner','-loglevel','error','-filter_complex','color','-frames:v','1','-f','webp','-']),spawn('convert'),spawn('magick'),spawn('gm'),spawn('find',['--version'])]["map"]((p)=>{return Promise["race"]([ new Promise((resolve)=>{p["on"]('close',(code)=>{resolve(code!== 127)})}), new Promise((resolve)=>{p["on"]('error',(_)=>{return resolve(false)})})])}));let [ffmpeg,ffprobe,ffmpegWebp,convert,magick,gm,find]=test;console["log"](test);let s=global["support"]= {ffmpeg,ffprobe,ffmpegWebp,convert,magick,gm,find};Object["freeze"](global["support"]);if(!s["ffmpeg"]){conn["logger"]["warn"]('Please install ffmpeg for sending videos (pkg install ffmpeg)')};if(s["ffmpeg"]&&  !s["ffmpegWebp"]){conn["logger"]["warn"]('Stickers may not animated without libwebp on ffmpeg (--enable-ibwebp while compiling ffmpeg)')};if(!s["convert"]&&  !s["magick"] &&  !s["gm"]){conn["logger"]["warn"]('Stickers may not work without imagemagick if libwebp on ffmpeg doesnt isntalled (pkg install imagemagick)')}}_quickTest()["then"](()=>{conn["logger"]["info"]('\u2705 Quick test Done!')})["catch"](console["error"])
